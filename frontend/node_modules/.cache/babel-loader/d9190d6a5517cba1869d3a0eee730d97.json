{"ast":null,"code":"import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET, USER_PROFILE_UPDATE_REQUEST, USER_PROFILE_UPDATE_SUCCESS, USER_PROFILE_UPDATE_FAIL, USER_PROFILE_UPDATE_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL } from '../constants/userConstants';\nimport axios from 'axios';\nimport { ORDER_MY_LIST_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login/', {\n      'username': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"userInfo\");\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_MY_LIST_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register/', {\n      'name': name,\n      'email': email,\n      'password': password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_PROFILE_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/users/profile/update/', user, config);\n    dispatch({\n      type: USER_PROFILE_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_UPDATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/users/', config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/users/', config);\n    dispatch({\n      type: USER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/iLaptop.pk/Desktop/Django-React-Ecommerce-website/frontend/src/actions/userActions.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_PROFILE_UPDATE_REQUEST","USER_PROFILE_UPDATE_SUCCESS","USER_PROFILE_UPDATE_FAIL","USER_PROFILE_UPDATE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","axios","ORDER_MY_LIST_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","detail","message","logout","removeItem","register","name","getUserDetails","id","getState","userLogin","userInfo","Authorization","token","get","updateUserProfile","user","put","listUsers","deleteUser"],"mappings":"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","sourcesContent":["import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_PROFILE_UPDATE_REQUEST,\r\n    USER_PROFILE_UPDATE_SUCCESS,\r\n    USER_PROFILE_UPDATE_FAIL,\r\n    USER_PROFILE_UPDATE_RESET,\r\n\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n\r\n        USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n\r\n} from '../constants/userConstants'\r\nimport axios from 'axios'\r\nimport { ORDER_MY_LIST_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'username': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n\r\n    localStorage.removeItem(\"userInfo\")\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: USER_DETAILS_RESET\r\n    })\r\n    dispatch({\r\n        type: ORDER_MY_LIST_RESET\r\n    })\r\n    dispatch({\r\n        type: USER_LIST_RESET\r\n    })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_REQUEST\r\n        })\r\n\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            '/api/users/profile/update/',\r\n            user,\r\n            config\r\n        )\r\n\r\n\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_PROFILE_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n \r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/users/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo }\r\n        } = getState()\r\n \r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            '/api/users/',\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n\r\n    catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}