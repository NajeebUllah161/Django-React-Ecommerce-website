{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCTS_LIST_REQUEST, PRODUCTS_LIST_SUCCESS, PRODUCTS_LIST_FAILURE } from '../constants/productConstants';\nexport const listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCTS_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products/');\n    dispatch({\n      type: PRODUCTS_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCTS_LIST_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/NAJEEB/Desktop/django_ecomerce/frontend/src/actions/productActions.js"],"names":["axios","PRODUCTS_LIST_REQUEST","PRODUCTS_LIST_SUCCESS","PRODUCTS_LIST_FAILURE","listProducts","dispatch","type","data","get","payload","error","response","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,qBADJ,EAEIC,qBAFJ,EAGIC,qBAHJ,QAIO,+BAJP;AAOA,OAAO,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAElD,MAAI;AAEAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL;AADD,KAAD,CAAR;AAGA,UAAM;AAAEM,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,gBAAV,CAAvB;AAEAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,qBADD;AAELO,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAKH,GAZD,CAYE,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEH,qBADD;AAELM,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GACHF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OADjB,GAEHF,KAAK,CAACE;AAJP,KAAD,CAAR;AAMH;AAEJ,CAvBM","sourcesContent":["import axios from 'axios'\r\nimport {\r\n    PRODUCTS_LIST_REQUEST,\r\n    PRODUCTS_LIST_SUCCESS,\r\n    PRODUCTS_LIST_FAILURE\r\n} from '../constants/productConstants'\r\n\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: PRODUCTS_LIST_REQUEST\r\n        })\r\n        const { data } = await axios.get('/api/products/')\r\n\r\n        dispatch({\r\n            type: PRODUCTS_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCTS_LIST_FAILURE,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}