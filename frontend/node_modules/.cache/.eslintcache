[{"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\index.js":"1","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\store.js":"2","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\App.js":"4","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reducers\\cartReducers.js":"5","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reducers\\productReducers.js":"6","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reducers\\userReducers.js":"7","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Footer.js":"8","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reducers\\orderReducers.js":"9","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Header.js":"10","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\CartScreen.js":"11","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\ProductScreen.js":"12","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\HomeScreen.js":"13","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\LoginScreen.js":"14","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\ProfileScreen.js":"15","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\PaymentScreen.js":"16","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\RegisterScreen.js":"17","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\PlaceOrderScreen.js":"18","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\ShippingScreen.js":"19","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\OrderScreen.js":"20","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Rating.js":"21","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Loader.js":"22","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Message.js":"23","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Product.js":"24","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\FormContainer.js":"25","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\CheckoutSteps.js":"26","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\constants\\cartConstants.js":"27","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\actions\\cartActions.js":"28","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\constants\\productConstants.js":"29","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\constants\\userConstants.js":"30","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\actions\\productActions.js":"31","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\actions\\userActions.js":"32","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\actions\\orderActions.js":"33","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\constants\\orderConstants.js":"34","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\UserListScreen.js":"35"},{"size":616,"mtime":1645371847659,"results":"36","hashOfConfig":"37"},{"size":1869,"mtime":1651304471242,"results":"38","hashOfConfig":"37"},{"size":375,"mtime":1645371847664,"results":"39","hashOfConfig":"37"},{"size":1852,"mtime":1647063694841,"results":"40","hashOfConfig":"37"},{"size":1539,"mtime":1645371847661,"results":"41","hashOfConfig":"37"},{"size":1166,"mtime":1645371847663,"results":"42","hashOfConfig":"37"},{"size":3469,"mtime":1651304190358,"results":"43","hashOfConfig":"37"},{"size":417,"mtime":1645371847651,"results":"44","hashOfConfig":"37"},{"size":2917,"mtime":1645959296415,"results":"45","hashOfConfig":"37"},{"size":3322,"mtime":1651302940521,"results":"46","hashOfConfig":"37"},{"size":4832,"mtime":1645371847665,"results":"47","hashOfConfig":"37"},{"size":5896,"mtime":1645371847669,"results":"48","hashOfConfig":"37"},{"size":1177,"mtime":1645371847666,"results":"49","hashOfConfig":"37"},{"size":2800,"mtime":1645371847666,"results":"50","hashOfConfig":"37"},{"size":6703,"mtime":1645966940191,"results":"51","hashOfConfig":"37"},{"size":1838,"mtime":1645371847668,"results":"52","hashOfConfig":"37"},{"size":4033,"mtime":1645371847671,"results":"53","hashOfConfig":"37"},{"size":6981,"mtime":1645371847669,"results":"54","hashOfConfig":"37"},{"size":3360,"mtime":1645371847671,"results":"55","hashOfConfig":"37"},{"size":8596,"mtime":1645965669023,"results":"56","hashOfConfig":"37"},{"size":1989,"mtime":1645371847655,"results":"57","hashOfConfig":"37"},{"size":477,"mtime":1645371847653,"results":"58","hashOfConfig":"37"},{"size":240,"mtime":1645371847653,"results":"59","hashOfConfig":"37"},{"size":1041,"mtime":1645371847654,"results":"60","hashOfConfig":"37"},{"size":392,"mtime":1645371847651,"results":"61","hashOfConfig":"37"},{"size":1682,"mtime":1645371847650,"results":"62","hashOfConfig":"37"},{"size":289,"mtime":1645371847656,"results":"63","hashOfConfig":"37"},{"size":1360,"mtime":1645371847645,"results":"64","hashOfConfig":"37"},{"size":384,"mtime":1645371847657,"results":"65","hashOfConfig":"37"},{"size":1288,"mtime":1651304038616,"results":"66","hashOfConfig":"37"},{"size":1406,"mtime":1645371847646,"results":"67","hashOfConfig":"37"},{"size":6705,"mtime":1651305055225,"results":"68","hashOfConfig":"37"},{"size":4239,"mtime":1645959429370,"results":"69","hashOfConfig":"37"},{"size":858,"mtime":1645958216677,"results":"70","hashOfConfig":"37"},{"size":3703,"mtime":1651305517897,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2dktdh",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\index.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\store.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\App.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Header.js",["148","149","150"],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\ProductScreen.js",["151","152"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProductDetails } from '../actions/productActions'\r\n\r\nfunction ProductScreen() {\r\n\r\n    const match = useParams()\r\n    const navigate = useNavigate()\r\n    const { id } = match\r\n    const [qty, setQty] = useState(1)\r\n    const dispatch = useDispatch()\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(Number(id)))\r\n\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        navigate(`/cart/${Number(id)}?qty=${qty}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to=\"/\" className=\"btn btn-light my-3\">Go Back</Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Row>\r\n                            <Col md={6}>\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e825'} />\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Price: ${product.price}\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        Description: {product.description}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n\r\n                            <Col md={3}>\r\n                                <Card>\r\n                                    <ListGroup variant=\"flush\">\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price:</Col>\r\n                                                <Col>\r\n                                                    <strong>${product.price}</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Status:</Col>\r\n                                                <Col>{product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}</Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n\r\n                                        {product.countInStock > 0 && (\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>Qty</Col>\r\n                                                    <Col xs='auto' className='my-1'>\r\n                                                        <Form.Control\r\n                                                            as=\"select\"\r\n                                                            value={qty}\r\n                                                            onChange={(e) => setQty(e.target.value)}\r\n                                                        >\r\n                                                            {\r\n\r\n                                                                [...Array(product.countInStock).keys()].map((x) => (\r\n                                                                    <option key={x + 1} value={x + 1}>\r\n                                                                        {x + 1}\r\n                                                                    </option>\r\n                                                                ))\r\n                                                            }\r\n\r\n                                                        </Form.Control>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )}\r\n\r\n                                        <ListGroup.Item>\r\n                                            <Button\r\n                                                onClick={addToCartHandler}\r\n                                                disabled={product.countInStock == 0}\r\n                                                className=\"btn-block w-100\"\r\n                                                type=\"button\">\r\n                                                Add to Cart\r\n                                            </Button>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\HomeScreen.js",["153","154"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\n\r\nfunction HomeScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const { error, loading, products } = productList\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(listProducts())\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader />\r\n                : error ? <Message variant=\"danger\">{error}</Message>\r\n                    :\r\n                    <Row>\r\n                        {products.map(product => (\r\n                            <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                <Product product={product} />\r\n                            </Col>\r\n                        ))}\r\n                    </Row>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\ProfileScreen.js",["155","156"],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\PaymentScreen.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\RegisterScreen.js",["157"],"import React, { useEffect, useState } from 'react';\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword)\r\n            setMessage(\"Passwords do not match\")\r\n\r\n        else\r\n            dispatch(register(name, email, password))\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Register</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Username</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter Username'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Type Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Password Again</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Button className='mt-3' type='submit' value='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Already Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\PlaceOrderScreen.js",["158","159","160"],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\n\r\nfunction PlaceOrderScreen() {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const navigate = useNavigate()\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            navigate(`/order/${order._id}`)\r\n            dispatch({\r\n                type: ORDER_CREATE_RESET\r\n            })\r\n        }\r\n    }, [success, navigate])\r\n\r\n    const placeOrder = () => {\r\n\r\n        if (!cart.paymentMethod) {\r\n            navigate('/payment')\r\n        } else {\r\n            dispatch(createOrder({\r\n                orderItems: cart.cartItems,\r\n                shippingAddress: cart.shippingAddress,\r\n                paymentMethod: cart.paymentMethod,\r\n                itemsPrice: cart.itemsPrice,\r\n                shippingPrice: cart.shippingPrice,\r\n                taxPrice: cart.taxPrice,\r\n                totalPrice: cart.totalPrice\r\n            }))\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant=\"flush\">\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city},\r\n                                {'  '}\r\n                                {cart.shippingAddress.postalCode},\r\n                                {'  '}\r\n                                {cart.shippingAddress.address}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ?\r\n                                <Message variant='info'>\r\n                                    Your cart is empty\r\n                                </Message>\r\n                                : <ListGroup variant=\"flush\">\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = {(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            }\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item className=\"mt-3\">\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"mt-1\">\r\n                                <Row>\r\n                                    <Col>Items:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"mt-1\">\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"mt-1\">\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"mt-1\">\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant=\"danger\">{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item className=\"mt-1 \">\r\n                                <Button type=\"button\"\r\n                                    variant=\"primary\"\r\n                                    className=\"w-100 btn-block\"\r\n                                    disabled={cart.cartItems === 0}\r\n                                    onClick={placeOrder}\r\n                                >\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\ShippingScreen.js",["161"],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nfunction ShippingScreen() {\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        navigate('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        value={address ? address : ''}\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        value={city ? city : ''}\r\n                        onChange={(e) => setCity(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter postal code'\r\n                        value={postalCode ? postalCode : ''}\r\n                        onChange={(e) => setPostalCode(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='text'\r\n                        placeholder='Enter country'\r\n                        value={country ? country : ''}\r\n                        onChange={(e) => setCountry(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className=\"mt-3\" type='submit' variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\OrderScreen.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Loader.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Message.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\Product.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\FormContainer.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\actions\\userActions.js",["162"],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\actions\\orderActions.js",["163","164"],"import axios from 'axios'\r\nimport {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n\r\n    ORDER_MY_LIST_REQUEST,\r\n    ORDER_MY_LIST_SUCCESS,\r\n    ORDER_MY_LIST_FAIL,\r\n    ORDER_MY_LIST_RESET\r\n\r\n} from '../constants/orderConstants'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            order,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('cartItems')\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.message.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.message.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const payOrder = (id, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.message.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_MY_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo }\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/myorders/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_MY_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch (error) {\r\n        dispatch({\r\n            type: ORDER_MY_LIST_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.message.data.detail\r\n                : error.message\r\n        })\r\n    }\r\n}","C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\iLaptop.pk\\Desktop\\Django-React-Ecommerce-website\\frontend\\src\\screens\\UserListScreen.js",["165","166","167","168","169"],{"ruleId":"170","severity":1,"message":"171","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":14},{"ruleId":"170","severity":1,"message":"174","line":3,"column":16,"nodeType":"172","messageId":"173","endLine":3,"endColumn":27},{"ruleId":"170","severity":1,"message":"175","line":4,"column":34,"nodeType":"172","messageId":"173","endLine":4,"endColumn":37},{"ruleId":"176","severity":1,"message":"177","line":23,"column":8,"nodeType":"178","endLine":23,"endColumn":25,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":105,"column":80,"nodeType":"182","messageId":"183","endLine":105,"endColumn":82},{"ruleId":"170","severity":1,"message":"184","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"176","severity":1,"message":"185","line":20,"column":8,"nodeType":"178","endLine":20,"endColumn":10,"suggestions":"186"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"180","severity":1,"message":"187","line":58,"column":22,"nodeType":"182","messageId":"183","endLine":58,"endColumn":24},{"ruleId":"180","severity":1,"message":"187","line":37,"column":22,"nodeType":"182","messageId":"183","endLine":37,"endColumn":24},{"ruleId":"170","severity":1,"message":"184","line":1,"column":28,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"188","line":6,"column":8,"nodeType":"172","messageId":"173","endLine":6,"endColumn":14},{"ruleId":"176","severity":1,"message":"189","line":34,"column":8,"nodeType":"178","endLine":34,"endColumn":27,"suggestions":"190"},{"ruleId":"170","severity":1,"message":"191","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"192","line":20,"column":5,"nodeType":"172","messageId":"173","endLine":20,"endColumn":30},{"ruleId":"170","severity":1,"message":"193","line":14,"column":5,"nodeType":"172","messageId":"173","endLine":14,"endColumn":20},{"ruleId":"170","severity":1,"message":"194","line":19,"column":5,"nodeType":"172","messageId":"173","endLine":19,"endColumn":24},{"ruleId":"170","severity":1,"message":"184","line":1,"column":28,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"174","line":2,"column":25,"nodeType":"172","messageId":"173","endLine":2,"endColumn":36},{"ruleId":"170","severity":1,"message":"195","line":22,"column":46,"nodeType":"172","messageId":"173","endLine":22,"endColumn":59},{"ruleId":"170","severity":1,"message":"196","line":22,"column":68,"nodeType":"172","messageId":"173","endLine":22,"endColumn":79},{"ruleId":"176","severity":1,"message":"197","line":30,"column":8,"nodeType":"178","endLine":30,"endColumn":43,"suggestions":"198"},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useLocation' is defined but never used.","'Row' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["199"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["200"],"Expected '!==' and instead saw '!='.","'Loader' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["201"],"'useEffect' is defined but never used.","'USER_PROFILE_UPDATE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'ORDER_MY_LIST_RESET' is defined but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.",["202"],{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [dispatch, id, match]",{"range":"211","text":"212"},"Update the dependencies array to be: [dispatch]",{"range":"213","text":"214"},"Update the dependencies array to be: [success, navigate, order._id, dispatch]",{"range":"215","text":"216"},"Update the dependencies array to be: [dispatch, navigate, successDelete, userInfo]",{"range":"217","text":"218"},[861,878],"[dispatch, id, match]",[599,601],"[dispatch]",[1332,1351],"[success, navigate, order._id, dispatch]",[1074,1109],"[dispatch, navigate, successDelete, userInfo]"]